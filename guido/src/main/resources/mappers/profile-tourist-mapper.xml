<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.guido.profile.model.dao.ProfileTouristMapper">


	<resultMap id="user_rm" type="User">
		<id property="userNo" column="USER_NO"/>
		<result property="userEmail" column="USER_EMAIL"/>
		<result property="userPassword" column="USER_PASSWORD"/>
		<result property="userName" column="USER_NAME"/>
		<result property="userTel" column="USER_TEL"/>
		<result property="profileImage" column="PROFILE_IMG"/>
		<result property="userType" column="USER_TYPE"/>
		<result property="userState" column="USER_STATE"/>
	</resultMap>
	
	<resultMap  type="File" id="file_rm">
		<id property="fileNo" column="FILE_NO" />
	 	<result property="productNo" column="PRODUCT_NO" />
	 	<result property="fileOrder" column="FILE_ORDER" />
	 	<result property="filePath" column="FILE_PATH" />
	</resultMap>
	
	<resultMap type="Reservation" id="reservation_rm">
		<id property="reservationNo" column="RESERVATION_NO"/>
		<result property="productNo" column="PRODUCT_NO"/>
		<result property="userNo" column="USER_NO"/>
		<result property="createDate" column="CREATE_DT"/>
		<result property="reservationState" column="RESERVATION_STATE"/>
		<result property="paymentMethod" column="PAYMENT_METHOD"/>
		<result property="guestCount" column="GUEST_COUNT"/>
		<result property="productDateNo" column="PRODUCT_DT_NO"/>
		<result property="optionNo" column="OPTION_NO"/>
		<result property="requestContent" column="REQUEST_CONTENT"/>
		<result property="orderNumber" column="ORDER_NUMBER"/>
		<result property="totalPrice" column="TOTAL_PRICE"/>
		<result property="impUid" column="IMP_UID"/>
		<result property="cancelReason" column="CANCEL_REASON"/>
		
		<result property="userName" column="USER_NAME"/>
		<result property="userTel" column="USER_TEL"/>
		<result property="productDate" column="PRODUCT_DT"/>
		<result property="productPackage" column="PRODUCT_PACKAGE"/>
		<result property="tourDuration" column="TOUR_DURATION"/>
		<result property="productName" column="PRODUCT_NAME"/>
		<result property="optionName" column="OPTION_NAME"/>
		
		<result property="guideLanguage" column="GUIDE_LANGUAGE"/>

		<result property="primaryLanguage" column="PRIMARY_LANGUAGE"/>
		<result property="faceImg" column="FACE_IMG"/>
		<result property="thumbnail" column="THUMBNAIL" />
	</resultMap>
	
	<resultMap type="Review" id="review_rm">
		<id property="reviewNo" column="REVIEW_NO"/>
		<result property="userNo" column="USER_NO"/>
		<result property="reviewMessage" column="REVIEW_MESSAGE"/>
		<result property="reviewStars" column="REVIEW_STARS"/>
		<result property="reviewDeleteFL" column="REVIEW_DEL_FL"/>
		<result property="productNo" column="PRODUCT_NO"/>
		<result property="createDate" column="CREATE_DT"/>
		<result property="userName" column="USER_NAME"/>
		<result property="profileImage" column="PROFILE_IMG"/>
		
		<result property="productName" column="PRODUCT_NAME"/>
		<result property="productDtNo" column="PRODUCT_DT_NO"/>
		<result property="reviewReply" column="REVIEW_REPLY"/>
	</resultMap>
	
	<!-- Product resultMap-->
	<resultMap type="Product" id="product_rm">
		<id property="productNo" column="PRODUCT_NO" />

		<result property="productName" column="PRODUCT_NAME" />
		<result property="productPackage" column="PRODUCT_PACKAGE" />
		<result property="productContent" column="PRODUCT_CONTENT" />
		<result property="productPrice" column="PRODUCT_PRICE" />
		<result property="productAddPrice" column="PRODUCT_ADD_PRICE" />
		<result property="maxTourist" column="PRODUCT_MAX_TOURIST" />
		<result property="minTourist" column="PRODUCT_MIN_TOURIST" />
		
		<result property="userNo" column="USER_NO" />
		<result property="themeCode" column="THEME_CODE" />
		<result property="productState" column="PRODUCT_STATE" />
		<result property="createDate" column="CREATE_DT" />
		<result property="guideLanguage" column="GUIDE_LANGUAGE" />
		<result property="viewCount" column="VIEW_COUNT" />
		
		<result property="regionName" column="REGION_NAME" />
		<result property="themeName" column="THEME_NAME" />
		
		<result property="reviewStars" column="REVIEW_STARS" />
		<result property="superGuideFl" column="SUPER_GUIDE_FL" />
		
		<result property="courseName" column="COURSE_NAME" />
		<result property="productDate" column="PRODUCT_DT" />
		
		<collection property="imageList" select="selectImageList"
			column="PRODUCT_NO" javaType="java.util.ArrayList" ofType="File"/>
	</resultMap>
	
	<!-- 가이드인지 판매자인지 체크 ( userType: 1 == G / 0 == T) -->
	<select id="userTypeCheck">
		SELECT COUNT(*) 
		FROM "USER"
		WHERE USER_NO = #{userNo}
		AND USER_TYPE = 'G'
	</select>
	
	<!-- 회원 정보 가져오기 (이메일, 이름, 프로필 이미지, 유저 넘버) -->
	 <select id="userInfo" resultMap="user_rm">
		SELECT USER_EMAIL, USER_NAME, PROFILE_IMG, USER_NO
		FROM "USER"
		WHERE USER_NO = #{userNo}
	 </select>
	 
	<!-- 프로필 이미지 수정 -->
	<update id="updateProfile" >
		UPDATE "USER"
		SET PROFILE_IMG= #{profileImage}
		WHERE USER_NO= #{userNo}
	</update>
	
	<!-- 구매 내역 가져오기 (상품 번호, 썸네일) -->
	<select id="reservationList" resultMap="reservation_rm">
		SELECT PRODUCT_NO, FILE_PATH THUMBNAIL
		FROM "FILE"
		JOIN RESERVATION USING (PRODUCT_NO)
		WHERE USER_NO = #{userNo}
		AND FILE_ORDER = 1
	</select>
	
	<!-- 구매 수 카운트 -->
	<select id="reservationCount" resultType="_int">
		SELECT COUNT(PRODUCT_NO)
		FROM RESERVATION
		WHERE USER_NO = #{userNo}
	</select>
	
	 <!-- 내가 쓴 리뷰 내역 가져오기 -->
	 <select id="reviewList" resultMap="review_rm">
		SELECT REVIEW_NO, REVIEW_MESSAGE, REVIEW_STARS*20 REVIEW_STARS
			   , TO_CHAR(R.CREATE_DT, 'YYYY/MM/DD') CREATE_DT, PROFILE_IMG, USER_NAME
			   , PRODUCT_NAME, REVIEW_REPLY, PRODUCT_NO
		FROM "REVIEW" R
		JOIN "USER" U ON(R.USER_NO = U.USER_NO)
		JOIN "PRODUCT" USING (PRODUCT_NO)
		WHERE U.USER_STATE = 'N'
		AND U.USER_NO = #{userNo}
		AND REVIEW_DEL_FL = 'N'
		AND REVIEW_REPLY_DEL_FL = 'N'
		ORDER BY 1 DESC
		FETCH FIRST 3 ROWS ONLY
	 </select>
	 
	 
	 <!-- 리뷰 수 카운트 -->
	 <select id="reviewCount" resultType="_int">
		 SELECT COUNT(*)
			FROM REVIEW
			WHERE USER_NO =  #{userNo}
			AND REVIEW_REPLY_DEL_FL ='N'
	 </select>
	 
	 <!-- 구매자 프로필 자신이 쓴 리뷰 목록 더보기 (3개씩) -->
	 <select id="myReviewMore" resultMap="review_rm">
		SELECT * FROM(
			SELECT ROW_NUMBER() OVER (ORDER BY REVIEW_NO DESC) AS NUM
					,REVIEW_NO, REVIEW_MESSAGE, REVIEW_STARS*20 REVIEW_STARS
				  	, TO_CHAR(R.CREATE_DT, 'YYYY/MM/DD') CREATE_DT, PROFILE_IMG, USER_NAME
				   , PRODUCT_NAME, REVIEW_REPLY, PRODUCT_NO
			FROM "REVIEW" R
			JOIN "USER" U ON(R.USER_NO = U.USER_NO)
			JOIN "PRODUCT" USING (PRODUCT_NO)
			WHERE U.USER_STATE = 'N'
			AND U.USER_NO = #{pageUserNo}
			AND REVIEW_DEL_FL = 'N'
			AND REVIEW_REPLY_DEL_FL = 'N'
			)
		<![CDATA[ WHERE NUM > #{startReviewNum} ]]>
			ORDER BY NUM
	 </select>
	 
	 <!--  리뷰 안쓴 목록 가져오기 -->
	 <select id="addReviewList" resultMap="review_rm">
		SELECT R.PRODUCT_NO, R.USER_NO, PRODUCT_DT_NO, PRODUCT_NAME, RV.REVIEW_MESSAGE 
		FROM RESERVATION R
		JOIN PRODUCT P ON (R.PRODUCT_NO=P.PRODUCT_NO)
		LEFT JOIN "REVIEW" RV ON (R.PRODUCT_NO = RV.PRODUCT_NO)
		WHERE R.USER_NO = #{userNo}
		AND R.RESERVATION_STATE = 'D'
		AND RV.REVIEW_MESSAGE IS NULL 
		ORDER BY R.CREATE_DT DESC 
	 </select>
	 
	 <!-- 리뷰 작성 -->
	 <insert id="addReview">
		 INSERT INTO REVIEW
			(REVIEW_NO, USER_NO, REVIEW_MESSAGE, REVIEW_STARS, REVIEW_DEL_FL, PRODUCT_NO, CREATE_DT)
			VALUES(SEQ_REVIEW_NO.NEXTVAL, #{userNo}, #{reviewMessage}, #{reviewStarsDouble}, 'N', #{productNo}, SYSDATE)
	 </insert>
	 
	 <!-- 리뷰 삭제 -->
	 <delete id="reviewDel">
		 DELETE FROM REVIEW
			WHERE PRODUCT_NO = #{productNo}
			AND USER_NO = #{userNo}
	 </delete>
	
	<!-- 리뷰 수정 -->
	<update id="reviewEdit">
		UPDATE REVIEW
		SET REVIEW_MESSAGE=#{reviewMessage}, REVIEW_STARS=#{reviewStarsDouble}
		WHERE PRODUCT_NO= #{productNo}
		AND USER_NO = #{userNo}
	</update>
	
	<!-- 구매 내역 가져오기 (자세한) -->
	<select id="myReservation" resultMap="reservation_rm">
		SELECT R.RESERVATION_NO, R.PRODUCT_NO, R.USER_NO, R.RESERVATION_STATE,
		  R.PRODUCT_DT_NO, R.ORDER_NUMBER, R.TOTAL_PRICE, PO.OPTION_NAME, P.PRODUCT_PACKAGE, P.TOUR_DURATION,
		  F.FILE_PATH THUMBNAIL, TO_CHAR(PD.PRODUCT_DT, 'YYYY-MM-DD') PRODUCT_DT, P.PRODUCT_NAME
		FROM RESERVATION R
  		    JOIN PRODUCT_DT PD ON PD.PRODUCT_DT_NO = R.PRODUCT_DT_NO
		    JOIN PRODUCT P ON P.PRODUCT_NO = R.PRODUCT_NO
		    LEFT JOIN PRODUCT_OPTION PO ON PO.OPTION_NO = R.OPTION_NO
		    LEFT JOIN (
		      SELECT PRODUCT_NO, FILE_PATH, FILE_ORDER,
		        ROW_NUMBER() OVER (PARTITION BY PRODUCT_NO ORDER BY FILE_ORDER) AS RN
		      FROM "FILE"
		    ) F ON F.PRODUCT_NO = R.PRODUCT_NO AND F.RN = 1
		WHERE R.USER_NO = #{userNo}
		ORDER BY PD.PRODUCT_DT DESC
		FETCH FIRST 3 ROWS ONLY
	</select>

	 <!-- 구매자 예약 목록 더보기 (3개씩) -->
	 <select id="myReservationMore" resultMap="reservation_rm">
		SELECT * FROM (
		  SELECT
		    ROW_NUMBER() OVER (ORDER BY PD.PRODUCT_DT DESC) AS NUM,
		      R.RESERVATION_NO, R.PRODUCT_NO, R.USER_NO, R.RESERVATION_STATE,
			  R.PRODUCT_DT_NO, R.ORDER_NUMBER, R.TOTAL_PRICE, PO.OPTION_NAME, P.PRODUCT_PACKAGE, P.TOUR_DURATION,
			  F.FILE_PATH THUMBNAIL, TO_CHAR(PD.PRODUCT_DT, 'YYYY-MM-DD') PRODUCT_DT, P.PRODUCT_NAME
		  FROM RESERVATION R
		    JOIN PRODUCT_DT PD ON PD.PRODUCT_DT_NO = R.PRODUCT_DT_NO
		    JOIN PRODUCT P ON P.PRODUCT_NO = R.PRODUCT_NO
		    LEFT JOIN PRODUCT_OPTION PO ON PO.OPTION_NO = R.OPTION_NO
		    LEFT JOIN (
		      SELECT PRODUCT_NO, FILE_PATH, FILE_ORDER,
		        ROW_NUMBER() OVER (PARTITION BY PRODUCT_NO ORDER BY FILE_ORDER) AS RN
		      FROM "FILE"
		    ) F ON F.PRODUCT_NO = R.PRODUCT_NO AND F.RN = 1
		  WHERE R.USER_NO = #{userNo}
		  ORDER BY PD.PRODUCT_DT DESC
		)
		<![CDATA[ WHERE NUM > #{startReservationNum} ]]>
			ORDER BY NUM
	 </select>
	 
 	<!-- 특정 상품 이미지 목록 조회 -->
	<select id="selectImageList" resultMap="file_rm">
		SELECT * FROM "FILE"
		WHERE PRODUCT_NO = #{productNo}
		ORDER BY FILE_ORDER
	</select>
	
	<!-- 위시리스트 불러오기 -->
	<select id="myWishList" resultMap="product_rm">
		SELECT W.PRODUCT_NO, P.PRODUCT_NAME, P.PRODUCT_PRICE, P.REGION_NAME, P.PRODUCT_PACKAGE,
		  NVL(TO_CHAR(AVG(R.REVIEW_STARS), 'FM9.09'), '0.0') AS REVIEW_STARS,
		  P.PRODUCT_STATE
		FROM WISHLIST W
		JOIN PRODUCT P ON P.PRODUCT_NO = W.PRODUCT_NO
		LEFT JOIN REVIEW R ON R.PRODUCT_NO = W.PRODUCT_NO
		WHERE W.USER_NO = #{userNo}
		AND P.PRODUCT_STATE = 'N'
		GROUP BY W.WISHLIST_NO, W.PRODUCT_NO, P.PRODUCT_NAME,
		P.PRODUCT_PRICE, P.REGION_NAME, P.PRODUCT_PACKAGE, P.PRODUCT_STATE
		ORDER BY W.WISHLIST_NO DESC
	</select>
	
	 <!-- 관심 상품 등록 체크-->
	 <select id="selectWishCheck" resultType="_int">
		 SELECT COUNT(*) 
		FROM "WISHLIST"
		WHERE USER_NO = #{userNo}
		AND PRODUCT_NO = #{productNo}
	 </select>
	 
	 
	 <!-- 관심 상품 등록 -->
	 <insert id="insertProductWish">
		 INSERT INTO "WISHLIST"
		VALUES(SEQ_WISHLIST_NO.NEXTVAL, #{userNo}, #{productNo}, DEFAULT)
	 </insert>
	 
		 
	<!-- 관심 상품 해제 -->
	 <delete id="deleteProductWish">
		 DELETE FROM "WISHLIST"
		 WHERE USER_NO = #{userNo}
		 AND PRODUCT_NO = #{productNo}
	 </delete>
	 
</mapper>
