<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.guido.profile.model.dao.ProfileTouristMapper">


	<resultMap id="user_rm" type="User">
		<id property="userNo" column="USER_NO"/>
		<result property="userEmail" column="USER_EMAIL"/>
		<result property="userPassword" column="USER_PASSWORD"/>
		<result property="userName" column="USER_NAME"/>
		<result property="userTel" column="USER_TEL"/>
		<result property="profileImage" column="PROFILE_IMG"/>
		<result property="userType" column="USER_TYPE"/>
		<result property="userState" column="USER_STATE"/>
	</resultMap>
	
	<resultMap  type="File" id="file_rm">
		<id property="fileNo" column="FILE_NO" />
	 	<result property="productNo" column="PRODUCT_NO" />
	 	<result property="fileOrder" column="FILE_ORDER" />
	 	<result property="filePath" column="FILE_PATH" />
	</resultMap>
	
	<resultMap  type="Reservation" id="reservation_rm">
		<id property="reservationNo" column="RESERVATION_NO" />
	 	<result property="productNo" column="PRODUCT_NO" />
	 	<result property="userNo" column="USER_NO" />
	 	<result property="createDate" column="CREATE_DT" />
	 	<result property="reservationState" column="RESERVATION_STATE" />
	 	<result property="paymentMethod" column="PAYMENT_METHOD" />
	 	<result property="guestCount" column="GUEST_COUNT" />
	 	<result property="productDateNo" column="PRODUCT_DT_NO" />
	 	
	 	<result property="thumbnail" column="FILE_PATH" />
	 	<result property="productName" column="PRODUCT_NAME" />
	 	<result property="productDate" column="PRODUCT_DT" />
	</resultMap>
	
	<resultMap type="Review" id="review_rm">
		<id property="reviewNo" column="REVIEW_NO"/>
		<result property="userNo" column="USER_NO"/>
		<result property="reviewMessage" column="REVIEW_MESSAGE"/>
		<result property="reviewStars" column="REVIEW_STARS"/>
		<result property="reviewDeleteFL" column="REVIEW_DEL_FL"/>
		<result property="productNo" column="PRODUCT_NO"/>
		<result property="createDate" column="CREATE_DT"/>
		<result property="userName" column="USER_NAME"/>
		<result property="profileImage" column="PROFILE_IMG"/>
		
		<result property="productName" column="PRODUCT_NAME"/>
		<result property="productDtNo" column="PRODUCT_DT_NO"/>
		<result property="reviewReply" column="REVIEW_REPLY"/>
	</resultMap>
	
	<!-- 가이드인지 판매자인지 체크 ( userType: 1 == G / 0 == T) -->
	<select id="userTypeCheck">
		SELECT COUNT(*) 
		FROM "USER"
		WHERE USER_NO = #{userNo}
		AND USER_TYPE = 'G'
	</select>
	
	<!-- 회원 정보 가져오기 (이메일, 이름, 프로필 이미지, 유저 넘버) -->
	 <select id="userInfo" resultMap="user_rm">
		SELECT USER_EMAIL, USER_NAME, PROFILE_IMG, USER_NO
		FROM "USER"
		WHERE USER_NO = #{userNo}
	 </select>
	 
	<!-- 프로필 이미지 수정 -->
	<update id="updateProfile" >
		UPDATE "USER"
		SET PROFILE_IMG= #{profileImage}
		WHERE USER_NO= #{userNo}
	</update>
	
	<!-- 구매 내역 가져오기 (상품 번호, 썸네일) -->
	<select id="reservationList" resultMap="reservation_rm">
		SELECT PRODUCT_NO, FILE_PATH
		FROM "FILE"
		JOIN RESERVATION USING (PRODUCT_NO)
		WHERE USER_NO = #{userNo}
		AND FILE_ORDER = 1
	</select>
	
	<!-- 구매 수 카운트 -->
	<select id="reservationCount" resultType="_int">
		SELECT COUNT(PRODUCT_NO)
		FROM RESERVATION
		WHERE USER_NO = #{userNo}
	</select>
	
	 <!-- 내가 쓴 리뷰 내역 가져오기 -->
	 <select id="reviewList" resultMap="review_rm">
		SELECT REVIEW_NO, REVIEW_MESSAGE, REVIEW_STARS*20 REVIEW_STARS
			   , TO_CHAR(R.CREATE_DT, 'YYYY/MM/DD') CREATE_DT, PROFILE_IMG, USER_NAME
			   , PRODUCT_NAME, REVIEW_REPLY, PRODUCT_NO
		FROM "REVIEW" R
		JOIN "USER" U ON(R.USER_NO = U.USER_NO)
		JOIN "PRODUCT" USING (PRODUCT_NO)
		WHERE U.USER_STATE = 'N'
		AND U.USER_NO = #{userNo}
		AND REVIEW_DEL_FL = 'N'
		AND REVIEW_REPLY_DEL_FL = 'N'
		ORDER BY 1 DESC
		FETCH FIRST 3 ROWS ONLY
	 </select>
	 
	 <!-- 리뷰 수 카운트 -->
	 <select id="reviewCount" resultType="_int">
		 SELECT COUNT(*)
			FROM REVIEW
			WHERE USER_NO =  #{userNo}
			AND REVIEW_REPLY_DEL_FL ='N'
	 </select>
	 
	 <!-- 구매자 프로필 자신이 쓴 리뷰 목록 더보기 (3개씩) -->
	 <select id="myReviewMore" resultMap="review_rm">
		SELECT * FROM(
			SELECT ROW_NUMBER() OVER (ORDER BY REVIEW_NO DESC) AS NUM
					,REVIEW_NO, REVIEW_MESSAGE, REVIEW_STARS*20 REVIEW_STARS
				  	, TO_CHAR(R.CREATE_DT, 'YYYY/MM/DD') CREATE_DT, PROFILE_IMG, USER_NAME
				   , PRODUCT_NAME, REVIEW_REPLY, PRODUCT_NO
			FROM "REVIEW" R
			JOIN "USER" U ON(R.USER_NO = U.USER_NO)
			JOIN "PRODUCT" USING (PRODUCT_NO)
			WHERE U.USER_STATE = 'N'
			AND U.USER_NO = #{pageUserNo}
			AND REVIEW_DEL_FL = 'N'
			AND REVIEW_REPLY_DEL_FL = 'N'
			)
		<![CDATA[ WHERE NUM > #{startReviewNum} ]]>
			ORDER BY NUM
	 </select>
	 
	 <!--  리뷰 안쓴 목록 가져오기 -->
	 <select id="addReviewList" resultMap="review_rm">
		SELECT R.PRODUCT_NO, R.USER_NO, PRODUCT_DT_NO, PRODUCT_NAME, RV.REVIEW_MESSAGE 
		FROM RESERVATION R
		JOIN PRODUCT P ON (R.PRODUCT_NO=P.PRODUCT_NO)
		LEFT JOIN "REVIEW" RV ON (R.PRODUCT_NO = RV.PRODUCT_NO)
		WHERE R.USER_NO = #{userNo}
		AND R.RESERVATION_STATE = 'D'
		AND RV.REVIEW_MESSAGE IS NULL 
		ORDER BY R.CREATE_DT DESC 
	 </select>
	 
	 <!-- 리뷰 작성 -->
	 <insert id="addReview">
		 INSERT INTO REVIEW
			(REVIEW_NO, USER_NO, REVIEW_MESSAGE, REVIEW_STARS, REVIEW_DEL_FL, PRODUCT_NO, CREATE_DT)
			VALUES(SEQ_REVIEW_NO.NEXTVAL, #{userNo}, #{reviewMessage}, #{reviewStarsDouble}, 'N', #{productNo}, SYSDATE)
	 </insert>
	 
	 <!-- 리뷰 삭제 -->
	 <delete id="reviewDel">
		 DELETE FROM REVIEW
			WHERE PRODUCT_NO = #{productNo}
			AND USER_NO = #{userNo}
	 </delete>
	
	<!-- 리뷰 수정 -->
	<update id="reviewEdit">
		UPDATE REVIEW
		SET REVIEW_MESSAGE=#{reviewMessage}, REVIEW_STARS=#{reviewStarsDouble}
		WHERE PRODUCT_NO= #{productNo}
		AND USER_NO = #{userNo}
	</update>
	
	<!-- 구매 내역 가져오기 (자세한) -->
	<select id="myReservation" resultMap="reservation_rm">
		SELECT RESERVATION_NO, R.PRODUCT_NO, R.USER_NO, RESERVATION_STATE, R.PRODUCT_DT_NO,
		    (SELECT FILE_PATH FROM "FILE" F 
		    WHERE F.PRODUCT_NO = R.PRODUCT_NO
		    AND F.FILE_ORDER = 1) AS FILE_PATH,
		    (SELECT PD.PRODUCT_DT FROM PRODUCT_DT PD
		    WHERE PD.PRODUCT_DT_NO = R.PRODUCT_DT_NO) AS PRODUCT_DT,
		    (SELECT P.PRODUCT_NAME FROM PRODUCT P
		    WHERE P.PRODUCT_NO = R.PRODUCT_NO) AS PRODUCT_NAME
		FROM RESERVATION R
		WHERE R.USER_NO = #{userNo}
		ORDER BY R.PRODUCT_NO DESC
		FETCH FIRST 3 ROWS ONLY
	</select>

	 <!-- 구매자 예약 목록 더보기 (3개씩) -->
	 <select id="myReservationMore" resultMap="reservation_rm">
		SELECT * FROM(
			SELECT ROW_NUMBER() OVER (ORDER BY R.PRODUCT_NO) AS NUM,
				RESERVATION_NO, R.PRODUCT_NO, R.USER_NO, RESERVATION_STATE, R.PRODUCT_DT_NO,
			    (SELECT FILE_PATH FROM "FILE" F 
			    WHERE F.PRODUCT_NO = R.PRODUCT_NO
			    AND F.FILE_ORDER = 1) AS FILE_PATH,
			    (SELECT PD.PRODUCT_DT FROM PRODUCT_DT PD
			    WHERE PD.PRODUCT_DT_NO = R.PRODUCT_DT_NO) AS PRODUCT_DT,
			    (SELECT P.PRODUCT_NAME FROM PRODUCT P
			    WHERE P.PRODUCT_NO = R.PRODUCT_NO) AS PRODUCT_NAME
			FROM RESERVATION R
			WHERE R.USER_NO = 25
			ORDER BY R.PRODUCT_NO
			)
		<![CDATA[ WHERE NUM > #{startReservationNum} ]]>
			ORDER BY NUM
	 </select>
	
</mapper>
