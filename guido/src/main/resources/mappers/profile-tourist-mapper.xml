<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.guido.profile.model.dao.ProfileTouristMapper">
	
<!--
	private int userNo; // 번호
	private String userEmail; // 이메일(아이디)
	private String userPassword; // 비밀번호
	private String userName; // 이름
	private String userTel; // 전화번호
	private String profileImage; // 프로필 이미지
	private String createDate; // 가입일
	private String userType; // 타입(G: 가이드, T: 여행객, M: 관리자)
	private String ; // 상태(Y: 미승인(가이드), N: 정상, B: 블락, D: 탈퇴)
-->

	
	<resultMap id="user_rm" type="User">
		<id property="userNo" column="USER_NO"/>
		<result property="userEmail" column="USER_EMAIL"/>
		<result property="userPassword" column="USER_PASSWORD"/>
		<result property="userName" column="USER_NAME"/>
		<result property="userTel" column="USER_TEL"/>
		<result property="profileImage" column="PROFILE_IMG"/>
		<result property="userType" column="USER_TYPE"/>
		<result property="userState" column="USER_STATE"/>
	</resultMap>
	
	<resultMap  type="File" id="file_rm">
		<id property="fileNo" column="FILE_NO" />
	 	<result property="productNo" column="PRODUCT_NO" />
	 	<result property="fileOrder" column="FILE_ORDER" />
	 	<result property="filePath" column="FILE_PATH" />
	</resultMap>
	
	<resultMap  type="Reservation" id="reservation_rm">
		<id property="reservationNo" column="RESERVATION_NO" />
	 	<result property="productNo" column="PRODUCT_NO" />
	 	<result property="userNo" column="USER_NO" />
	 	<result property="createDate" column="CREATE_DT" />
	 	<result property="reservationState" column="RESERVATION_STATE" />
	 	<result property="paymentMethod" column="PAYMENT_METHOD" />
	 	<result property="guestCount" column="GUEST_COUNT" />
	 	<result property="productDateNo" column="PRODUCT_DT_NO" />
	 	
	 	<result property="thumbnail" column="FILE_PATH" />
	</resultMap>
	
	<resultMap type="Review" id="review_rm">
		<id property="reviewNo" column="REVIEW_NO"/>
		<result property="userNo" column="USER_NO"/>
		<result property="reviewMessage" column="REVIEW_MESSAGE"/>
		<result property="reviewStars" column="REVIEW_STARS"/>
		<result property="reviewDeleteFL" column="REVIEW_DEL_FL"/>
		<result property="productNo" column="PRODUCT_NO"/>
		<result property="createDate" column="CREATE_DT"/>
		<result property="userName" column="USER_NAME"/>
		<result property="profileImage" column="PROFILE_IMG"/>
		
		<result property="productName" column="PRODUCT_NAME"/>
		<result property="productDtNo" column="PRODUCT_DT_NO"/>
		<result property="reviewReply" column="REVIEW_REPLY"/>
	</resultMap>
	
	<!-- 가이드인지 판매자인지 체크 ( userType: 1 == G / 0 == T) -->
	<select id="userTypeCheck">
		SELECT COUNT(*) 
		FROM "USER"
		WHERE USER_NO = #{userNo}
		AND USER_TYPE = 'G'
	</select>
	
	<!-- 회원 정보 가져오기 (이메일, 이름, 프로필 이미지, 유저 넘버) -->
	 <select id="userInfo" resultMap="user_rm">
		SELECT USER_EMAIL, USER_NAME, PROFILE_IMG, USER_NO
		FROM "USER"
		WHERE USER_NO = #{userNo}
	 </select>
	 
	<!-- 프로필 이미지 수정 -->
	<update id="updateProfile" >
		UPDATE "USER"
		SET PROFILE_IMG= #{profileImage}
		WHERE USER_NO= #{userNo}
	</update>
	
	<!-- 구매 내역 가져오기 (상품 번호, 썸네일) -->
	<select id="reservationList" resultMap="reservation_rm">
		SELECT PRODUCT_NO, FILE_PATH
		FROM "FILE"
		JOIN RESERVATION USING (PRODUCT_NO)
		WHERE USER_NO = #{userNo}
		AND FILE_ORDER = 1
	</select>
	
	<!-- 구매 수 카운트 -->
	<select id="reservationCount" resultType="_int">
		SELECT COUNT(PRODUCT_NO)
		FROM RESERVATION
		WHERE USER_NO = #{userNo}
	</select>
	
	 <!-- 내가 쓴 리뷰 내역 가져오기 -->
	 <select id="reviewList" resultMap="review_rm">
		SELECT REVIEW_NO, REVIEW_MESSAGE, REVIEW_STARS*20 REVIEW_STARS
			   , TO_CHAR(R.CREATE_DT, 'YYYY/MM/DD') CREATE_DT, PROFILE_IMG, USER_NAME
			   , PRODUCT_NAME, REVIEW_REPLY
		FROM "REVIEW" R
		JOIN "USER" U ON(R.USER_NO = U.USER_NO)
		JOIN "PRODUCT" USING (PRODUCT_NO)
		WHERE U.USER_STATE = 'N'
		AND U.USER_NO = #{userNo}
		AND REVIEW_DEL_FL = 'N'
		AND REVIEW_REPLY_DEL_FL = 'N'
		ORDER BY 1 DESC
		FETCH FIRST 3 ROWS ONLY
	 </select>
	 
	 <!-- 리뷰 수 카운트 -->
	 <select id="reviewCount" resultType="_int">
		 SELECT COUNT(*)
			FROM REVIEW
			WHERE USER_NO =  #{userNo}
			AND REVIEW_REPLY_DEL_FL ='N'
	 </select>
	 
	 <!-- 구매자 프로필 자신이 쓴 리뷰 목록 더보기 (3개씩) -->
	 <select id="myReviewMore" resultMap="review_rm">
		SELECT * FROM(
			SELECT ROW_NUMBER() OVER (ORDER BY REVIEW_NO DESC) AS NUM
					,REVIEW_NO, REVIEW_MESSAGE, REVIEW_STARS*20 REVIEW_STARS
				  	, TO_CHAR(R.CREATE_DT, 'YYYY/MM/DD') CREATE_DT, PROFILE_IMG, USER_NAME
				   , PRODUCT_NAME, REVIEW_REPLY
			FROM "REVIEW" R
			JOIN "USER" U ON(R.USER_NO = U.USER_NO)
			JOIN "PRODUCT" USING (PRODUCT_NO)
			WHERE U.USER_STATE = 'N'
			AND U.USER_NO = #{pageUserNo}
			AND REVIEW_DEL_FL = 'N'
			AND REVIEW_REPLY_DEL_FL = 'N'
			)
		<![CDATA[ WHERE NUM > #{startReviewNum} ]]>
			ORDER BY NUM
	 </select>
	 
	 <!--  리뷰 안쓴 목록 가져오기 -->
	 <select id="addReviewList" resultMap="review_rm">
		SELECT RS.PRODUCT_NO PRODUCT_NO, P.PRODUCT_NAME PRODUCT_NAME, RS.PRODUCT_DT_NO PRODUCT_DT_NO, 
		    (SELECT R.REVIEW_MESSAGE
		    FROM REVIEW R
		    WHERE R.PRODUCT_NO = RS.PRODUCT_NO
		    AND R.USER_NO = 25
		    AND R.REVIEW_MESSAGE IS NULL) AS REVIEW_MESSAGE
		FROM RESERVATION RS
		JOIN "PRODUCT" P ON RS.PRODUCT_NO = P.PRODUCT_NO
		LEFT JOIN "REVIEW" R ON P.PRODUCT_NO = R.PRODUCT_NO
		WHERE RS.USER_NO = 25
		AND RS.RESERVATION_STATE = 'D'
		AND R.REVIEW_NO IS NULL
		ORDER BY RS.PRODUCT_NO DESC
	 </select>
	
</mapper>
